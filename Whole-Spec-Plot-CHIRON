#! /usr/bin/python
import sys 
import os
import datetime
import math

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import MultipleLocator

import pyfits # From the space telescope science institute.

# This is just the whole-spec plotting code from Normalizs-CHIRON.
filename = sys.argv[1]
normspec, header = pyfits.getdata(filename, 0, header=True)
objectn = header['object']
objectn = objectn.split('-')[0] #in case of combined name and date.
objectd = header['UTSHUT']
objectd = objectd.split('T')[0] #Keeps only date, not the time of exp.

#sm = np.zeros( (62,802,2) )

def smooth3(x):
   global sm                                                              
   nelm = np.shape(x)[1]
   sm = np.zeros( (62,int(math.floor(nelm/3)),2) )
   for o in range(62):
       for i in range(int(math.floor(nelm/3))):
          n=3*i
          sm[o,i,0] = ( x[o,n,0] + x[o,n+1,0] + x[o,n+2,0] ) / 3
          sm[o,i,1] = ( x[o,n,1] + x[o,n+1,1] + x[o,n+2,1] ) / 3
   return sm;

print('Smoothing')

smooth3(normspec)

majorLocator   = MultipleLocator(100)
minorLocator   = MultipleLocator(25)

print('Generating Whole Spectrum Plot')
xmin = normspec[0,0,0]                                                
xmax = normspec[61,800,0]
ymax = 1.5
fig = plt.figure(figsize=(16, 2))
ax = fig.add_subplot(1,1,1,autoscale_on=False,
                     ylim=(0,ymax),xlim=(xmin, xmax))
plt.title(objectn+' '+objectd, fontsize=9)
plt.xlabel(r'Wavelength ($\AA$)',fontsize=8)
plt.ylabel('Flux', fontsize=8)
ax.tick_params(axis='both', which='major', labelsize=6)
ax.xaxis.set_minor_locator(minorLocator)
ax.xaxis.set_major_locator(majorLocator)
for order in range(62):
    ro = order
    if order%2==0:
        ax.plot(sm[order,:,0],sm[order,:,1], 
                color='green', linewidth=.07)
        ax.text(normspec[order,400,0], .9, order, 
                fontsize=4, color='green', 
                horizontalalignment='center',
                va='center')
    else:
        ax.plot(sm[order,:,0],sm[order,:,1], 
                color='blue', linewidth=.07)
        ax.text(normspec[order,400,0], 1.1, ro,
                fontsize=4, color='blue',
                horizontalalignment='center',
                va='center')
pltfilename = objectn+'-'+objectd+'-Whole-Spectra.png'
plt.savefig(pltfilename, bbox_inches='tight', dpi=800)

print('Finished Normalization, Have Fun!')
